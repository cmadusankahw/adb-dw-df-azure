{
	"name": "CustomerSCDFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "customers_staged",
						"type": "DatasetReference"
					},
					"name": "CustomerSource"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "addingSCDIsCurrent"
				},
				{
					"name": "renameOLTPColumns"
				},
				{
					"name": "LookupForExistingRows"
				},
				{
					"name": "FilterExistingRows"
				},
				{
					"name": "SelectFiltered"
				},
				{
					"name": "SetIsCurrent"
				},
				{
					"name": "AlterRows"
				}
			],
			"script": "source(output(\n\t\tcustomer_id as string,\n\t\tcustomer_unique_id as string,\n\t\tcustomer_zip_code_prefix as string,\n\t\tcustomer_city as string,\n\t\tcustomer_state as string,\n\t\tbirth_date as string,\n\t\tgender as string,\n\t\tname as string,\n\t\tmarital_status as string,\n\t\tincome as string,\n\t\temployement_status as string,\n\t\tjob_role as string,\n\t\tphone_no as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CustomerSource\nsource(output(\n\t\tsk_customer as integer,\n\t\tcustomer_id as string,\n\t\tcustomer_unique_id as string,\n\t\tcustomer_zip_code_prefix as integer,\n\t\tcustomer_city as string,\n\t\tcustomer_state as string,\n\t\tbirth_date as string,\n\t\tbirth_year as integer,\n\t\tbirth_month as integer,\n\t\tgeneration as string,\n\t\tage as integer,\n\t\tage_category as string,\n\t\tgender as string,\n\t\tname as string,\n\t\tmarital_status as string,\n\t\tincome as string,\n\t\tsocial_state as string,\n\t\temployement_status as string,\n\t\tjob_role as string,\n\t\tphone_operator as string,\n\t\tscd_created_at as timestamp,\n\t\tscd_is_current as string,\n\t\tscd_soft_deleted as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nCustomerSource derive(scd_is_current = \"YES\",\n\t\tscd_created_at = currentTimestamp()) ~> addingSCDIsCurrent\nDimCustomer select(mapColumn(\n\t\tsk_customer,\n\t\tOLTP_customer_id = customer_id,\n\t\tOLTP_customer_unique_id = customer_unique_id,\n\t\tOLTP_customer_zip_code_prefix = customer_zip_code_prefix,\n\t\tOLTP_customer_city = customer_city,\n\t\tOLTP_customer_state = customer_state,\n\t\tOLTP_birth_date = birth_date,\n\t\tbirth_year,\n\t\tbirth_month,\n\t\tgeneration,\n\t\tage,\n\t\tage_category,\n\t\tOLTP_gender = gender,\n\t\tOLTP_name = name,\n\t\tOLTP_marital_status = marital_status,\n\t\tOLTP_income = income,\n\t\tsocial_state,\n\t\temployement_status,\n\t\tjob_role,\n\t\tphone_operator,\n\t\tscd_created_at,\n\t\tscd_is_current\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameOLTPColumns\nCustomerSource, renameOLTPColumns lookup(customer_id == OLTP_customer_id,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupForExistingRows\nLookupForExistingRows filter(!isNull(OLTP_customer_id)) ~> FilterExistingRows\nFilterExistingRows select(mapColumn(\n\t\tsk_customer,\n\t\tOLTP_customer_id,\n\t\tOLTP_customer_unique_id,\n\t\tOLTP_customer_zip_code_prefix,\n\t\tOLTP_customer_city,\n\t\tOLTP_customer_state,\n\t\tOLTP_birth_date,\n\t\tOLTP_gender,\n\t\tOLTP_name,\n\t\tOLTP_marital_status,\n\t\tOLTP_income,\n\t\tscd_is_current\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFiltered\nSelectFiltered derive(scd_is_current = \"NO\") ~> SetIsCurrent\nSetIsCurrent alterRow(updateIf(1 == 1)) ~> AlterRows\naddingSCDIsCurrent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsk_customer as integer,\n\t\tcustomer_id as string,\n\t\tcustomer_unique_id as string,\n\t\tcustomer_zip_code_prefix as integer,\n\t\tcustomer_city as string,\n\t\tcustomer_state as string,\n\t\tbirth_date as string,\n\t\tbirth_year as integer,\n\t\tbirth_month as integer,\n\t\tgeneration as string,\n\t\tage as integer,\n\t\tage_category as string,\n\t\tgender as string,\n\t\tname as string,\n\t\tmarital_status as string,\n\t\tincome as string,\n\t\tsocial_state as string,\n\t\temployement_status as string,\n\t\tjob_role as string,\n\t\tphone_operator as string,\n\t\tscd_created_at as timestamp,\n\t\tscd_is_current as string,\n\t\tscd_soft_deleted as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tcustomer_id,\n\t\tcustomer_unique_id,\n\t\tcustomer_zip_code_prefix,\n\t\tcustomer_city,\n\t\tcustomer_state,\n\t\tbirth_date,\n\t\tgender,\n\t\tname,\n\t\tmarital_status,\n\t\tincome,\n\t\temployement_status,\n\t\tjob_role,\n\t\tscd_created_at,\n\t\tscd_is_current\n\t)) ~> sink1\nAlterRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsk_customer as integer,\n\t\tcustomer_id as string,\n\t\tcustomer_unique_id as string,\n\t\tcustomer_zip_code_prefix as integer,\n\t\tcustomer_city as string,\n\t\tcustomer_state as string,\n\t\tbirth_date as string,\n\t\tbirth_year as integer,\n\t\tbirth_month as integer,\n\t\tgeneration as string,\n\t\tage as integer,\n\t\tage_category as string,\n\t\tgender as string,\n\t\tname as string,\n\t\tmarital_status as string,\n\t\tincome as string,\n\t\tsocial_state as string,\n\t\temployement_status as string,\n\t\tjob_role as string,\n\t\tphone_operator as string,\n\t\tscd_created_at as timestamp,\n\t\tscd_is_current as string,\n\t\tscd_soft_deleted as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['sk_customer'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsk_customer,\n\t\tcustomer_id = OLTP_customer_id,\n\t\tcustomer_unique_id = OLTP_customer_unique_id,\n\t\tcustomer_zip_code_prefix = OLTP_customer_zip_code_prefix,\n\t\tcustomer_city = OLTP_customer_city,\n\t\tcustomer_state = OLTP_customer_state,\n\t\tbirth_date = OLTP_birth_date,\n\t\tgender = OLTP_gender,\n\t\tname = OLTP_name,\n\t\tmarital_status = OLTP_marital_status,\n\t\tincome = OLTP_income,\n\t\tscd_is_current\n\t)) ~> sink2"
		}
	}
}